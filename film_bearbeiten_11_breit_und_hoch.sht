
ABARBEITUNGSNUMMER="$(echo "${ABARBEITUNGSNUMMER}" | awk '{print $1+1}')"

VERSION="v2015092600"


echo "
==========================================================================
${VERSION} | ${ABARBEITUNGSNUMMER} Breit und Hoch


#------------------------------------------------------------------------------#
# Breite und Hoehe ermitteln bzw. festlegen
" | tee -a ${AUSGABEDATEI}.log


echo "# - 17 Start: Breit und Hoch
==========================================================================
INVIDEOBREIT='${INVIDEOBREIT}'
INVIDEO_HOCH='${INVIDEO_HOCH}'

ISTVIDEOBREIT='${ISTVIDEOBREIT}'
ISTVIDEO_HOCH='${ISTVIDEO_HOCH}'

CROPVIDEOBREIT='${CROPVIDEOBREIT}'
CROPVIDEO_HOCH='${CROPVIDEO_HOCH}'

STDVIDEOBREIT='${STDVIDEOBREIT}'
STDVIDEO_HOCH='${STDVIDEO_HOCH}'

SOLLVIDEOBREIT='${SOLLVIDEOBREIT}'
SOLLVIDEO_HOCH='${SOLLVIDEO_HOCH}'
" | tee -a ${AUSGABEDATEI}.log

#------------------------------------------------------------------------------#
### Bild-Breite und Bild-Hoehe

if [ -z "${SOLLVIDEOBREIT}" ] ; then
        if [ -n "${STDVIDEOBREIT}" ] ; then
                SOLLVIDEOBREIT="${STDVIDEOBREIT}"
                echo "# - 41: Breit und Hoch
                STDVIDEOBREIT => SOLLVIDEOBREIT
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${QUADVIDEOBREIT}" ] ; then
                SOLLVIDEOBREIT="${QUADVIDEOBREIT}"
                echo "# - 46: Breit und Hoch
                QUADVIDEOBREIT => SOLLVIDEOBREIT
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${CROPVIDEOBREIT}" ] ; then
                SOLLVIDEOBREIT="${CROPVIDEOBREIT}"
                echo "# - 51: Breit und Hoch
                CROPVIDEOBREIT => SOLLVIDEOBREIT
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${ISTVIDEOBREIT}" ] ; then
                SOLLVIDEOBREIT="${ISTVIDEOBREIT}"
                echo "# - 56: Breit und Hoch
                ISTVIDEOBREIT => SOLLVIDEOBREIT
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${INVIDEO_HOCH}" ] ; then
                SOLLVIDEOBREIT="${INVIDEO_HOCH}"
                echo "# - 61: Breit und Hoch
                INVIDEO_HOCH => SOLLVIDEOBREIT
                " | tee -a ${AUSGABEDATEI}.log
        fi
fi

if [ -z "${SOLLVIDEO_HOCH}" ] ; then
        if [ -n "${STDVIDEO_HOCH}" ] ; then
                SOLLVIDEO_HOCH="${STDVIDEO_HOCH}"
                echo "# - 70: Breit und Hoch
                STDVIDEO_HOCH => STDVIDEO_HOCH
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${QUADVIDEO_HOCH}" ] ; then
                SOLLVIDEO_HOCH="${QUADVIDEO_HOCH}"
                echo "# - 75: Breit und Hoch
                QUADVIDEO_HOCH => STDVIDEO_HOCH
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${CROPVIDEO_HOCH}" ] ; then
                SOLLVIDEO_HOCH="${CROPVIDEO_HOCH}"
                echo "# - 80: Breit und Hoch
                CROPVIDEO_HOCH => STDVIDEO_HOCH
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${ISTVIDEO_HOCH}" ] ; then
                SOLLVIDEO_HOCH="${ISTVIDEO_HOCH}"
                echo "# - 85: Breit und Hoch
                ISTVIDEO_HOCH => STDVIDEO_HOCH
                " | tee -a ${AUSGABEDATEI}.log
        elif [ -n "${INVIDEO_HOCH}" ] ; then
                SOLLVIDEO_HOCH="${INVIDEO_HOCH}"
                echo "# - 90: Breit und Hoch
                INVIDEO_HOCH => STDVIDEO_HOCH
                " | tee -a ${AUSGABEDATEI}.log
        fi
fi

#------------------------------------------------------------------------------#
### skalieren

# IN-Bildbreite
if [ "${INVIDEOBREIT}" != "${SOLLVIDEOBREIT}" ] ; then
        echo "# - 101: Breit und Hoch
        Die Bildbreite soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi

# IN-Bildhoehe
if [ "${INVIDEO_HOCH}" != "${SOLLVIDEO_HOCH}" ] ; then
        echo "# - 109: Breit und Hoch
        Die Bildhoehe soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi


# IST-Bildbreite
if [ "${ISTVIDEOBREIT}" != "${SOLLVIDEOBREIT}" ] ; then
        echo "# - 118: Breit und Hoch
        Die Bildbreite soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi

# IST-Bildhoehe
if [ "${ISTVIDEO_HOCH}" != "${SOLLVIDEO_HOCH}" ] ; then
        echo "# - 126: Breit und Hoch
        Die Bildhoehe soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi


# CROP-Bildbreite
if [ "${CROPVIDEOBREIT}" != "${SOLLVIDEOBREIT}" ] ; then
        echo "# - 135: Breit und Hoch
        Die Bildbreite soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi

# CROP-Bildhoehe
if [ "${CROPVIDEO_HOCH}" != "${SOLLVIDEO_HOCH}" ] ; then
        echo "# - 143: Breit und Hoch
        Die Bildhoehe soll geaendert werden.
        " | tee -a ${AUSGABEDATEI}.log
        SKALIEREN="Ja"
fi


# Bildformat skalieren
if [ "${AUS_SKALIEREN}" == "Ja" ] ; then
        echo "# - 152: Breit und Hoch
        Das Ausgabe-Bildformat skalieren.
        " | tee -a ${AUSGABEDATEI}.log

        ### Ausgabe-Format-Syntax (-s), der setzt den scale-Filter automatisch ans Ende der Filterschlange
        AUSGABESKALIEREN="-s ${SOLLVIDEOBREIT}x${SOLLVIDEO_HOCH}"
fi

#------------------------------------------------------------------------------#
### wenn erforderlich, dann das Seitenverhaeltnis des Bildes setzen

echo "# - 163 Ende: Breit und Hoch
CROPVIDEOBREIT='${CROPVIDEOBREIT}'
CROPVIDEO_HOCH='${CROPVIDEO_HOCH}'
SOLLVIDEOBREIT='${SOLLVIDEOBREIT}'
SOLLVIDEO_HOCH='${SOLLVIDEO_HOCH}'

AUS_SKALIEREN='${AUS_SKALIEREN}'
AUSGABESKALIEREN='${AUSGABESKALIEREN}'

INVIDEOBREIT='${INVIDEOBREIT}'
INVIDEO_HOCH='${INVIDEO_HOCH}'

ISTVIDEOBREIT='${ISTVIDEOBREIT}'
ISTVIDEO_HOCH='${ISTVIDEO_HOCH}'

CROPVIDEOBREIT='${CROPVIDEOBREIT}'
CROPVIDEO_HOCH='${CROPVIDEO_HOCH}'

STDVIDEOBREIT='${STDVIDEOBREIT}'
STDVIDEO_HOCH='${STDVIDEO_HOCH}'

SOLLVIDEOBREIT='${SOLLVIDEOBREIT}'
SOLLVIDEO_HOCH='${SOLLVIDEO_HOCH}'

SKALIERFORMAT='${SKALIERFORMAT}'
AUSGABESKALIEREN='${AUSGABESKALIEREN}'
==========================================================================
" | tee -a ${AUSGABEDATEI}.log
